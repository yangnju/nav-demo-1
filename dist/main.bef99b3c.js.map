{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","console","log","prompt","indexOf","push","toUpperCase","logoType","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,CAAC,CAAC,WAAD,CAAnB,EAAmC;;AACnC,IAAMC,OAAO,GAAGF,SAAS,CAACG,IAAV,CAAe,SAAf,CAAhB,EAA0C;;AAC1C,IAAMC,CAAC,GAAGC,YAAY,CAACC,OAAb,CAAqB,GAArB,CAAV,EAAqC;;AACrC,IAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAX,CAAhB,EAA+B;;AAC/B,IAAMM,OAAO,GAAGH,OAAO,IAAI,CAAG;AAC1B;AAAEI,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,GAAG,EAAE;AAAlB,CADuB,EAEvB;AAAED,EAAAA,IAAI,EAAE,GAAR;AAAaC,EAAAA,GAAG,EAAE;AAAlB,CAFuB,CAA3B;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACD,GAAD,EAAS;AACzB,SAAOA,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,EAA6B;AAA7B,GACFA,OADE,CACM,SADN,EAEFA,OAFE,CAEM,MAFN,EAEc,EAFd,EAGFA,OAHE,CAGM,MAHN,EAGc,EAHd,CAAP,CADyB,CAIC;AAC7B,CALD;;AAOA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBf,EAAAA,SAAS,CAACG,IAAV,CAAe,eAAf,EAAgCa,MAAhC,GADiB,CACyB;;AAC1CN,EAAAA,OAAO,CAACO,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAAG;AAChC,QAAMC,GAAG,GAAGnB,CAAC,uFAEeiB,IAAI,CAACP,IAFpB,yDAGeE,WAAW,CAACK,IAAI,CAACN,GAAN,CAH1B,uPAAD,CAUJS,YAVI,CAUSnB,OAVT,CAAZ;AAWAkB,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgB,YAAM;AAAG;AACrBC,MAAAA,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACN,GAAjB;AACH,KAFD;AAGAQ,IAAAA,GAAG,CAACE,EAAJ,CAAO,OAAP,EAAgB,eAAhB,EAAiC,UAACG,CAAD,EAAO;AACpCA,MAAAA,CAAC,CAACC,eAAF,GADoC,CACf;;AACrBhB,MAAAA,OAAO,CAACiB,MAAR,CAAeR,KAAf,EAAsB,CAAtB,EAFoC,CAEV;;AAC1BJ,MAAAA,MAAM,GAH8B,CAG1B;AACb,KAJD;AAKH,GApBD;AAqBH,CAvBD;;AAwBAA,MAAM;AAENd,CAAC,CAAC,UAAD,CAAD,CAAcqB,EAAd,CAAiB,OAAjB,EAA0B,YAAM;AAC5BM,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,MAAIjB,GAAG,GAAGW,MAAM,CAACO,MAAP,CAAc,cAAd,CAAV,CAF4B,CAG5B;;AACA,MAAIlB,GAAG,CAACmB,OAAJ,CAAY,MAAZ,MAAwB,CAA5B,EAA+B;AAC3BnB,IAAAA,GAAG,GAAG,aAAaA,GAAnB;AACH,GAN2B,CAQ5B;;;AACAF,EAAAA,OAAO,CAACsB,IAAR,CAAa;AACTrB,IAAAA,IAAI,EAAEE,WAAW,CAACD,GAAD,CAAX,CAAiB,CAAjB,EAAoBqB,WAApB,EADG;AACiC;AAC1CC,IAAAA,QAAQ,EAAE,MAFD;AAGTtB,IAAAA,GAAG,EAAEA;AAHI,GAAb;AAKAG,EAAAA,MAAM;AACT,CAfD,GAiBA;;AACAQ,MAAM,CAACY,cAAP,GAAwB,YAAM;AAC1B,MAAMC,MAAM,GAAG5B,IAAI,CAAC6B,SAAL,CAAe3B,OAAf,CAAf,CAD0B,CACc;;AACxCL,EAAAA,YAAY,CAACiC,OAAb,CAAqB,GAArB,EAA0BF,MAA1B,EAF0B,CAES;AACtC,CAHD;;AAKAnC,CAAC,CAACsC,QAAD,CAAD,CAAYjB,EAAZ,CAAe,UAAf,EAA2B,UAACG,CAAD,EAAO;AAAA,MACtBe,GADsB,GACdf,CADc,CACtBe,GADsB;;AAE9B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/B,OAAO,CAACgC,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,QAAI/B,OAAO,CAAC+B,CAAD,CAAP,CAAW9B,IAAX,CAAgBgC,WAAhB,OAAkCH,GAAtC,EAA2C;AACvCjB,MAAAA,MAAM,CAACC,IAAP,CAAYd,OAAO,CAAC+B,CAAD,CAAP,CAAW7B,GAAvB;AACH;AACJ;AACJ,CAPD","file":"main.bef99b3c.js","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')   //为了在siteList中寻找last，生成一个$siteList变量\r\nconst $lastLi = $siteList.find('li.last') //为了把新增的li增加到last前一个，生成一个$lastLi变量\r\nconst x = localStorage.getItem('x')  //获取上次存的'x'\r\nconst xObject = JSON.parse(x)  //恢复成数组\r\nconst hashMap = xObject || [  //如果xObject不是空，就获取它的值，如果是空，就加载后面的内容\r\n    { logo: 'A', url: 'https://baidu.com' },\r\n    { logo: 'B', url: 'https://bilibili.con' }\r\n]\r\n\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')  //此处不能直接return url，因为此时的url是不变的\r\n        .replace('http://')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')  //删除点后面的所有内容\r\n}\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()  //render前要先删除\r\n    hashMap.forEach((node, index) => {  //创建的时候同时生成下标，有问题查forEach\r\n        const $li = $(`<li>\r\n            <div class=\"site\">\r\n                <div class=\"logo\">${node.logo}</div>\r\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"closeWrapper\">\r\n                    <svg class=\"icon\">\r\n                    <use xlink:href=\"#icon-close\"></use>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </li>`).insertBefore($lastLi)\r\n        $li.on('click', () => {  //用JS实现跳转\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.closeWrapper', (e) => {\r\n            e.stopPropagation()  //阻止冒泡\r\n            hashMap.splice(index, 1)  //删除第index个内容\r\n            render()  //渲染最新的hashMap\r\n        })\r\n    })\r\n}\r\nrender()\r\n\r\n$('.addSite').on('click', () => {\r\n    console.log('111')\r\n    let url = window.prompt('请输入您想添加的网站地址')\r\n    //将用户输入的内容保存至url变量\r\n    if (url.indexOf('http') !== 0) {\r\n        url = 'https://' + url\r\n    }\r\n\r\n    //根据url变量，修改hashMap变量\r\n    hashMap.push({\r\n        logo: simplifyUrl(url)[0].toUpperCase(),  //将精简过的用户输入的网址的首字母变为大写，存在logo中\r\n        logoType: 'text',\r\n        url: url\r\n    })\r\n    render()\r\n})\r\n\r\n//用户退出前要存储，查到用户关闭的事件，进行监听\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)  //将hashMap变成字符串\r\n    localStorage.setItem('x', string)  //setItem只接受字符串\r\n}\r\n\r\n$(document).on('keypress', (e) => {\r\n    const { key } = e\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})"]}